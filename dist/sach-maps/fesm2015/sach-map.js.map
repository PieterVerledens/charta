{"version":3,"file":"sach-map.js.map","sources":["ng://sach-map/lib/googlemap/map/map.module.ts","ng://sach-map/lib/googlemap/map/map.service.ts","ng://sach-map/lib/googlemap/map/marker/marker.module.ts","ng://sach-map/lib/googlemap/map/marker/enum/marker.enum.ts","ng://sach-map/lib/googlemap/map/marker/models/marker.model.ts","ng://sach-map/lib/googlemap/map/marker/marker.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule\r\n    ]\r\n})\r\nexport class MapModule { }\r\n","import { Injectable, ElementRef } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { MapModule } from './map.module';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\n\r\n@Injectable({\r\n    providedIn: MapModule\r\n})\r\nexport class MapService {\r\n    private _map: google.maps.Map;\r\n    private _key: string;\r\n\r\n\r\n    constructor(\r\n        private http: HttpClient\r\n    ) { }\r\n\r\n    public get map(): google.maps.Map {\r\n        return this._map;\r\n    }\r\n\r\n    public get key(): string {\r\n        return this._key;\r\n    }\r\n\r\n    /**\r\n     * Loadmap\r\n     * @param mapElement html map elemnt\r\n     */\r\n    public init(\r\n        mapElement: ElementRef,\r\n        mapOptions: google.maps.MapOptions,\r\n        compass: boolean,\r\n        key: string\r\n    ): google.maps.Map {\r\n        this._key = key;\r\n        \r\n        this._map = new google.maps.Map(mapElement.nativeElement, mapOptions);\r\n        if (compass) {\r\n            this.addCompass();\r\n        }\r\n\r\n        const overlay = new google.maps.OverlayView();\r\n        overlay.draw = function () {\r\n            this.getPanes().markerLayer.id = 'markerLayer';\r\n        };\r\n        overlay.setMap(this.map);\r\n\r\n        return this.map;\r\n    }\r\n\r\n    // GEOCODING\r\n\r\n    public getGeocodeFromAddress(address: string): Observable<any> {\r\n        return this.http.get(\r\n            `https://maps.googleapis.com/maps/api/geocode/json?address=${address}&key=${\r\n            this.key\r\n            }`\r\n        );\r\n    }\r\n\r\n\r\n\r\n    public async getAddressFromGeocode(\r\n        location: google.maps.LatLng\r\n    ): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            const geocoder = new google.maps.Geocoder();\r\n            const latlng = location;\r\n            let address: google.maps.GeocoderResult;\r\n            geocoder.geocode({ location: latlng }, (results, status) => {\r\n                if (status === google.maps.GeocoderStatus.OK) {\r\n                    address = results[0];\r\n                    resolve(address.formatted_address);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    // Compass\r\n\r\n    addCompass() {\r\n        const div = document.createElement('div');\r\n        const icon =\r\n            'https://maps.google.com/mapfiles/kml/shapes/parking_lot_maps.png';\r\n        div.innerHTML = '<img src=\"' + icon + '\"> ' + name;\r\n        this.map.controls[google.maps.ControlPosition.RIGHT_TOP].push(div);\r\n    }\r\n\r\n}\r\n","import { MarkerService } from './marker.service';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MapService } from '../map.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ]\r\n})\r\nexport class MarkerModule { }\r\n","export enum MarkerStateEnum {\r\n    CREATION,\r\n    EDIT,\r\n    IDLE\r\n}\r\n","\r\nimport { MarkerStateEnum } from '../enum/marker.enum';\r\nimport { MarkerService } from '../marker.service';\r\n\r\nexport class Marker extends google.maps.Marker {\r\n\r\n    public state: MarkerStateEnum = MarkerStateEnum.IDLE;\r\n    public rotate?: number = 0;\r\n\r\n    /**\r\n     *\r\n     */\r\n    constructor(markerService: MarkerService, opts?: google.maps.MarkerOptions) {\r\n        super(opts);\r\n        this.addListener('click', event => {\r\n            markerService.setSelectedMarker(this);\r\n        });\r\n    }\r\n}\r\n","import { MarkerModule } from './marker.module';\r\nimport { Marker } from './models/marker.model';\r\nimport { Injectable } from '@angular/core';\r\nimport { MarkerStateEnum } from './enum/marker.enum';\r\n\r\n@Injectable({\r\n    providedIn: MarkerModule\r\n})\r\nexport class MarkerService {\r\n    private selectedMarker: Marker;\r\n    private _markers: Marker[] = [];\r\n\r\n    private _markerCluster: MarkerClusterer;\r\n\r\n    public get markers(): Marker[] {\r\n        return this._markers;\r\n    }\r\n\r\n    public get markerCluster(): MarkerClusterer {\r\n        return this._markerCluster;\r\n    }\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    public createCluster(map: google.maps.Map) {\r\n        this._markerCluster = new MarkerClusterer(\r\n            map,\r\n            this.markers\r\n        );\r\n\r\n        this.markerCluster.setMaxZoom(16);\r\n    }\r\n\r\n    public registerMarkerOnClick(map: google.maps.Map) {\r\n        const marker = new Marker(this, {\r\n            position: new google.maps.LatLng(-1, -1),\r\n            map: map,\r\n            draggable: true,\r\n            clickable: true\r\n            // icon: {\r\n            //   url: \"assets/img/target_sami_medium.png\",\r\n            //   origin: new google.maps.Point(0, 0),\r\n            //   scaledSize: new google.maps.Size(250, 250)\r\n            // }\r\n        });\r\n        google.maps.event.addListener(\r\n            map,\r\n            'click',\r\n            event => {\r\n                marker.setPosition(event.latLng);\r\n                this.markerCluster.addMarker(marker);\r\n                this.addMarker(marker);\r\n                map.panTo(this.getLast().getPosition());\r\n            }\r\n        );\r\n        return marker;\r\n    }\r\n\r\n    public getGeocodeFromSelectedMarker(): google.maps.LatLng {\r\n        return this.selectedMarker.getPosition();\r\n    }\r\n\r\n    public findByIndex(index: number): Marker {\r\n        if (this._markers[index]) {\r\n            return this._markers[index];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public getLast(): Marker {\r\n        return this._markers[this._markers.length - 1];\r\n    }\r\n\r\n    public countMarkers(): number {\r\n        return this._markers.length;\r\n    }\r\n\r\n    public setSelectedMarker(marker: Marker): void {\r\n        this.selectedMarker = this._markers.find(x => x === marker);\r\n    }\r\n\r\n    public get getMarkerInCreationState(): Marker {\r\n        return this._markers.find(x => x.state === MarkerStateEnum.CREATION);\r\n    }\r\n\r\n    public addMarker(marker: Marker) {\r\n        marker.state = MarkerStateEnum.CREATION;\r\n        this._markers.push(marker);\r\n        this.selectedMarker = marker;\r\n    }\r\n\r\n    public rotateMarker(clockwise: boolean): void {\r\n        const markerIndex = this._markers.findIndex(\r\n            x => x === this.selectedMarker\r\n        );\r\n        const elements: NodeListOf<Element> = document.querySelectorAll(\r\n            '#markerLayer img'\r\n        );\r\n        const element: any = elements[markerIndex];\r\n        if (clockwise) {\r\n            this._markers[markerIndex].rotate += 7;\r\n            element.style.transform =\r\n                'rotate(' + this._markers[markerIndex].rotate + 'deg)';\r\n        } else {\r\n            this._markers[markerIndex].rotate -= 7;\r\n            element.style.transform =\r\n                'rotate(' + this._markers[markerIndex].rotate + 'deg)';\r\n        }\r\n    }\r\n\r\n    public deleteMarker(): void {\r\n        const marker: Marker = this._markers[this._markers.length - 1];\r\n        if (marker.state === MarkerStateEnum.CREATION) {\r\n            marker.setMap(null);\r\n            this._markers = this._markers.slice(0, this.countMarkers() - 1);\r\n            this.selectedMarker = null;\r\n        }\r\n    }\r\n\r\n    public hideMarker(marker: Marker): void {\r\n        marker.setMap(null);\r\n    }\r\n\r\n    public saveMarker(): void {\r\n        const marker: Marker = this.getLast();\r\n        marker.state = MarkerStateEnum.IDLE;\r\n        this.selectedMarker = null;\r\n    }\r\n}\r\n"],"names":[],"mappings":"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"}
